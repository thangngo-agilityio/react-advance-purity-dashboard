import{j as f,B as C,ai as O,_ as v}from"./index-DlbICa1t.js";import{u as m,a as P,m as n,A as t}from"./mainHttpService-CkpYfCQA.js";const x=({src:r="/imgs/avatar-default.svg",alt:c,width:a="40px",height:i="40px",...u})=>f.jsx(C,{w:a,h:i,borderRadius:"lg",...u,children:f.jsx(O,{w:"100%",h:"100%",borderRadius:"lg",objectFit:"cover",src:r,alt:c})}),F=r=>{const c=v(),{data:a,isLoading:i,isFetching:u}=m({queryKey:[t.PROJECT],queryFn:async()=>(await n.get(`${t.PROJECT}?view=Grid%20view`)).data,refetchOnWindowFocus:!1}),g=(a==null?void 0:a.records)||[],{data:j,isLoading:w}=m({queryKey:[t.PROJECT,r],queryFn:async({signal:s})=>(await n.getById(t.PROJECT,{signal:s},r)).data,refetchOnWindowFocus:!1}),{mutateAsync:l}=P({mutationFn:async s=>(await n.post(t.PROJECT,s)).data,onSuccess:s=>{const d=s.records;c.setQueryData([t.PROJECT],e=>({records:[...d,...(e==null?void 0:e.records)||[]]}))}}),{mutateAsync:R}=P({mutationFn:async s=>(await n.put(t.PROJECT,s)).data,onSuccess:async(s,d)=>{const e=d.records;c.setQueryData([t.PROJECT],p=>{var y;return{records:(y=p==null?void 0:p.records)==null?void 0:y.map(o=>o.id===e[0].id?{...o,fields:{...o.fields,projectName:e[0].fields.projectName,avatar:e[0].fields.avatar,budget:e[0].fields.budget,status:e[0].fields.status,completion:e[0].fields.completion,description:e[0].fields.description}}:o)}})}});return{projectData:g,projectId:j,isLoading:i,loadingProjectId:w,isFetching:u,createProject:l,updateProject:R}};export{x as A,F as u};
