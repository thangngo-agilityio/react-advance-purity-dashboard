import{j as y,B as g,aj as w,$ as l}from"./index-BNRhmCPs.js";import{u as v,a as f,m as p,A as t}from"./mainHttpService-dkPkg9Lb.js";const C=({src:a="/imgs/avatar-default.svg",alt:r,width:o="40px",height:i="40px",...n})=>y.jsx(g,{w:o,h:i,borderRadius:"lg",...n,children:y.jsx(w,{w:"100%",h:"100%",borderRadius:"lg",objectFit:"cover",src:a,alt:r})}),A=()=>{const a=l(),{data:r,isLoading:o,isFetching:i}=v({queryKey:[t.PROJECT],queryFn:async()=>(await p.get(`${t.PROJECT}?view=Grid%20view`)).data,refetchOnWindowFocus:!1}),n=(r==null?void 0:r.records)||[],{mutateAsync:j}=f({mutationFn:async s=>(await p.post(t.PROJECT,s)).data,onSuccess:s=>{const u=s.records;a.setQueryData([t.PROJECT],e=>({records:[...u,...(e==null?void 0:e.records)||[]]}))}}),{mutateAsync:P}=f({mutationFn:async s=>(await p.put(t.PROJECT,s)).data,onSuccess:async(s,u)=>{const e=u.records;a.setQueryData([t.PROJECT],d=>{var m;return{records:(m=d==null?void 0:d.records)==null?void 0:m.map(c=>c.id===e[0].id?{...c,fields:{...c.fields,projectName:e[0].fields.projectName,avatar:e[0].fields.avatar,budget:e[0].fields.budget,status:e[0].fields.status,completion:e[0].fields.completion,description:e[0].fields.description}}:c)}})}});return{projectData:n,isLoading:o,isFetching:i,createProject:j,updateProject:P}};export{C as A,A as u};
